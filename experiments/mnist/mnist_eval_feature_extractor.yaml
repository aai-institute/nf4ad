name: mnist
experiment: 
    device: cuda
    dataset: &dataset
      __object__: src.explib.datasets.MnistSplit
      digit: 3
      #flatten: false
    model_cfg: 
      type:
        __class__: &model src.nf4ad.flows.FeatureFlow 
      params:
          flow:
            __object__: &flow src.veriflow.flows.NiceFlow 
            soft_training: true
            training_noise_prior:
              __object__: pyro.distributions.Uniform
              low: 
                __eval__: 1e-20
              high: 0.01
            prior_scale: 1.0
            coupling_layers: &coupling_layers 10 
            coupling_nn_layers: &coupling_nn_layers [300, 300, 300] 
            nonlinearity: &nonlinearity  
              __eval__: torch.nn.ReLU() #tune.choice([torch.nn.ReLU()])
            split_dim: &split_dim 392
            base_distribution: 
              __object__: src.veriflow.distributions.RadialDistribution       
              device: cuda
              p: 1.0
              loc: 
                __eval__: torch.zeros(32).to("cuda")
              norm_distribution:
                __object__: pyro.distributions.LogNormal
                loc: 
                  __eval__: torch.zeros(1).to("cuda")
                scale: 
                  __eval__: (.5 * torch.ones(1)).to("cuda")
            use_lu: true
          pretrained_feature_encoder: &pretrained_feature_encoder /home/giorgia/nf4ad/data/pretrained/feature_encoder/model.tar


